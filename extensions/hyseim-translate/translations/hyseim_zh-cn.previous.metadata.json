{"version":"-1","contents":{"vs/hyseim/vs/workbench/serialMonitor/common/configContribution":{"serialport.baudrate.monitor":"Monitor Baudrate","serialport.baudrate.monitor.desc":"Default baudrate to use when connect to new serial port."},"vs/hyseim/vs/workbench/serialUpload/common/configContribution":{"serialport.baudrate.flash":"Flash Baudrate","serialport.baudrate.flash.desc":"Flasher baudrate."},"vs/hyseim/vs/platform/openocd/common/openocd":{"custom":"Custom","openocd.use.jtag":"use JTag interface","openocd.use.ftdi":"use FTDI interface","openocd.use.custom":"do not use bundled config file, write your own at \"{0}\" below"},"vs/hyseim/vs/workbench/fpioaConfig/electron-browser/fpioaContribution":{"fpioa.editor.label":"fpioa Editor"},"vs/hyseim/vs/workbench/flashManager/electron-browser/flashManagerContribution":{"flashManager":"Flash Manager"},"vs/hyseim/vs/services/serialPort/common/configContribution":{"serialport.config.filter-empty":"Filter Empty Devices"},"vs/hyseim/vs/services/serialPort/common/reloadAction":{"serialport.reloadDevice.title":"Reload device list"},"vs/hyseim/vs/workbench/serialMonitor/electron-browser/serialMonitorPanel":{"reload_devices":"Reload Devices","serial-port.open.termial":"Open serial terminal","serial-port.open.raw":"Open raw terminal","serial-port.close":"Close port","press.ctrl.enter":"Press {0}+Enter to send data."},"vs/hyseim/vs/workbench/serialMonitor/common/toggleSerialMonitorAction":{"serialport.togglePanel.title":"Toggle Serial Monitor"},"vs/hyseim/vs/workbench/topMenu/node/shortcutsContribution":{"hyseim":"Hyseim"},"vs/hyseim/vs/workbench/cmake/electron-browser/cmakeContribution":{"hyseim":"Hyseim"},"vs/hyseim/vs/workbench/bottomBar/common/hyseimButtonContribution":{"cmake":"CMake","cmakeErrorUnknown":"Click to view CMake logs...","cmakeNeedOpenFolder":"Please open any folder to continue...","cmakeNeedProject":"Click to create hello world project..."},"vs/hyseim/vs/workbench/packageManager/electron-browser/mainPanelContribution":{"packageManager":"Package Manager","package":"Package"},"vs/hyseim/vs/workbench/bootstrap/common/hyseimBootstrap":{"bootstrap.hyseim.fatal":"Something goes wrong when starting Hyseim IDE: {0}"},"vs/hyseim/vs/workbench/jsonGUIEditor/editor/common/actionId":{"editJson":"Edit JSON","editUI":"Open UI"},"vs/hyseim/vs/base/common/configKeys":{"hyseim":"Hyseim","build":"Build","debug":"Debug","openocd":"OpenOCD","jtag":"JLink","ftdi":"FTDI","custom":"Custom","deploy":"Deploy","cmake.build.verbose.lbl":"Verbose build","cmake.build.verbose.desc":"Verbose log when run build","cmake.debug.lbl":"Debug CMake output","cmake.debug.desc":"Super verbose cmake output, for debug only","debug.openocd.config":"select how openocd is configured","debug.openocd.port":"openocd listen port, 0 means auto select","debug.openocd.core":"which core to debug, -1 means all core","debug.openocd.extraArgs":"extra arguments passing to openocd executable","debug.jtag.id.desc":"Serial number of JLink device, 0 means use first available.","debug.jtag.speed.desc":"khz","debug.ftdi.speed.desc":"khz","debug.ftdi.vid_pid.desc":"FTDI USB device VID PID value (two HEX string, eg: \"1a2b 3c4d\")","debug.ftdi.layout.desc":"layout init value (two HEX string, eg: \"1a2b 3c4d\")","debug.ftdi.tdo-fe.desc":"ftdi_tdo_sample_edge value","debug.ftdi.extra.desc":"extra config sections","debug.custom.desc":"custom openocd config file","debug.common.filter-empty.desc":"Filter out device without productID"},"vs/hyseim/vs/base/common/jsonComments":{"jsonsParseReportErrors":"Failed to parse {0}: {1}."},"vs/hyseim/vs/base/common/speedShow":{"hyseim.download.message":"Complete: {0} {1} Speed@ {2}"},"vs/hyseim/vs/workbench/fpioaConfig/electron-browser/fpioaEditorInput":{"fpioaEditorInputName":"fpioa Config","alert":"Alert","io.select.overwrite.alert":"Reassign {0} \"{1}\" from {2} \"{3}\" to {4} \"{5}\"?","yes":"Yes","cancel":"Cancel","function":"function","pin":"pin"},"vs/hyseim/vs/base/common/menu/tools":{"tools":"Tools","CreateShortcuts":"Create Shortcuts","HyseimIOEditor":"Edit Hyseim IO function","OpenDeviceManager":"Edit Devices","OpenFlashManager":"Flash Editor","OpenProjectSettings":"Project settings"},"vs/hyseim/vs/base/common/jsonSchemas/flashSectionsSchema":{"flashManagerSchema":"Flash Manager"},"vs/hyseim/vs/workbench/flashManager/node/flashManagerService":{"cppErrorFlashManager":"There are error(s) in flash manager, please fix them before compile"},"vs/hyseim/vs/workbench/flashManager/common/editorInput":{"editingFile":"editing {0}","fileNotExists":"cannot read file: {0}","fileSelect":"Please select file for : {0}","filesMayLarge":"Total size larger than {0}"},"vs/hyseim/vs/workbench/flashManager/browser/flashManagerEditor":{"addFile":"Add file...","createZip":"Create Zip","createZipDesc":"Create K-Flash package (.kfpkg) file from listed file","createZipWithProgram":"Create zip (with program)","uploadAll":"Upload all files","informationMessage":"{0} files, {1} data, write flash: {2} to {3}"},"vs/hyseim/vs/workbench/flashManager/node/createZipAction":{"createZipFile":"Creating zip file...","noSection":"No file to falsh...","successCreateFile":"Successful create zip file: {0}.","building":"Building program..."},"vs/hyseim/vs/workbench/flashManager/common/type":{"flashManagerEditor":"Flash manager","uploadAllFiles":"Upload all files","createZip":"Create zip with program"},"vs/hyseim/vs/base/common/menu/serialPort":{"serialport":"Serial Port","upload":"Upload","and":"{0} and {1}","reboot":"Reboot","reboot.to.ISP.mode":"Reboot to ISP mode","hyseim.serial-port.default":"Click to select default serial port for flasher"},"vs/hyseim/vs/workbench/serialMonitor/electron-browser/serialDeviceList":{"settingsListLabel":"Settings"},"vs/hyseim/vs/workbench/serialMonitor/electron-browser/outputWindow":{"terminal.integrated.copySelection.noSelection":"The terminal has no selection to copy"},"vs/hyseim/vs/workbench/serialMonitor/common/actionId":{"hyseim.serial.terminal.toggle":"Toggle serial monitor visible","hyseim.serial.terminal.toggle.left":"Toggle device list visible","hyseim.serial.terminal.toggle.right":"Toggle config visible"},"vs/hyseim/vs/workbench/serialMonitor/electron-browser/actions/acceptSerialInput":{"actions.serial-port.acceptInput":"Serial Monitor Accept Input"},"vs/hyseim/vs/workbench/cmake/common/type":{"ErrorNotProject":"This is not a cmake project."},"vs/hyseim/vs/workbench/cmake/electron-browser/cmakeService":{"errorCMakeExit":"CMake command failed with {0}","errorCMakeCrash":"cmake process crashing","pleaseConfigureProject":"Please fix your project settings.","errorBuildErrorCode":"make failed with code {0}","errorNoVariant":"No build variant named: {0}","errorNoOutputBinary":"can not find an executable item"},"vs/hyseim/vs/workbench/cmake/electron-browser/actions/selectTargetAction":{"SelectTarget":"Select Target"},"vs/hyseim/vs/workbench/cmake/electron-browser/actions/selectVariantAction":{"SelectVariant":"Select Variant"},"vs/hyseim/vs/workbench/cmake/electron-browser/actions/openLocalCMakeList":{"open":"Open {1}"},"vs/hyseim/vs/base/common/jsonSchemas/cmakeConfigSchema":{"cmake":"CMake"},"vs/hyseim/vs/base/common/menu/cmake":{"and":"{0} and {1}","build":"Build","debug":"Debug","show.log.cmake":"Click to show CMake log.","cleanup":"Cleanup","configure":"Configure","run":"Run","no.error":"CMake status OK!"},"vs/hyseim/vs/services/workspace/electron-browser/selectProjectAction":{"library":"Library","executable":"Executable","notProject":"Non project","folder":"Folder: {0}","selectFolder":"Select working folder"},"vs/hyseim/vs/services/makefileService/common/type":{"createMakefile":"Create CMakeLists.txt"},"vs/hyseim/vs/services/workspace/common/actionId":{"selectProjectToBuild":"Select folder to use"},"vs/hyseim/vs/workbench/cmake/common/errors":{"hyseim.errors.cmake.folder.not.open":"Open any project to start","hyseim.errors.cmake.project.not.exists":"Create {0} to start a project","hyseim.errors.cmake.project.invalid":"Errors in {0}","hyseim.errors.cmake.lists.txt.exists":"CMakeLists.txt will be override, please remove it first"},"vs/hyseim/vs/workbench/cmake/common/actionIds":{"hyseim.cmake.create.hello-world":"Create a \"Hello World\" project"},"vs/hyseim/vs/workbench/packageManager/browser/actions/openPackagesMarketPlaceAction":{"openMarketPlaceExample":"Find an examples"},"vs/hyseim/vs/workbench/packageManager/browser/actions/displayPackageDetailAction":{"openurl.package.homepage":"Open Package Homepage"},"vs/hyseim/vs/workbench/packageManager/browser/actions/installDependencyAction":{"installSuccess":"All dependencies successfully installed.","installFail":"Install failed: {0}","installSuccessProject":"Project dependencies successfully installed.","selectVersion":"Select version to install"},"vs/hyseim/vs/base/common/menu/packageManager":{"packageManager":"Package Manager","openMarketPlace":"Explore online packages","InstallAllDependencies":"Install all dependencies","InstallProjectDependencies":"Install dependencies for current project","DeleteDependency":"Delete dependency"},"vs/hyseim/vs/workbench/packageManager/common/type":{"packageManager":"Package Manager"},"vs/hyseim/vs/workbench/packageManager/browser/viewletPanels/register":{"package list":"Package List","config":"Config"},"vs/hyseim/vs/workbench/packageManager/browser/editors/packageDetail":{"name":"Package name","version":"Package Version","no.description":"No description","not.install":"Not Installed","local.package":"Local package","ReinstallDependency":"Reinstall package","InstallDependency":"Install package","open.homepage":"Open homepage"},"vs/hyseim/vs/workbench/packageManager/browser/editors/packageBrowser":{"packages.browser":"Package Browser","packageManager.search":"Search package","library":"Library","example":"Example"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/hyseimPackageJsonEditor":{"hyseimPackageJsonEditor.type.title":"Project type","hyseimPackageJsonEditor.type.desc":"Type of your project. Warning: change this will clear others settings.","hyseimPackageJsonEditor.name.title":"Project name","hyseimPackageJsonEditor.name.desc":"Title of your project. Only a-z, 0-9, -, _ are allowed.","required":"Required","hyseimPackageJsonEditor.version.title":"Current version","hyseimPackageJsonEditor.version.desc":"Apply when publish.","hyseimPackageJsonEditor.homepage.title":"Homepage","hyseimPackageJsonEditor.homepage.desc":"A link to your project home (eg. github page).","hyseimPackageJsonEditor.header.title":"Headers directory","hyseimPackageJsonEditor.header.desc":"You can use #include from these folders in your code. One folder per line. Relative to this {0} file","hyseimPackageJsonEditor.source.title":"Source files","hyseimPackageJsonEditor.source.desc":"Source files to compile. One file/folder per line.","hyseimPackageJsonEditor.source.placeholder":"path/to/code.c - directly add a file.\npath/*.c - match all .c file in this folder.\npath/**.c - also recursive subfolders.","hyseimPackageJsonEditor.c_flags.title":"Arguments for gcc","hyseimPackageJsonEditor.c_flags.desc":"one argument per line","hyseimPackageJsonEditor.cpp_flags.title":"Arguments for g++","hyseimPackageJsonEditor.cpp_flags.desc":"one argument per line","hyseimPackageJsonEditor.c_cpp_flags.title":"Arguments for both gcc and g++","hyseimPackageJsonEditor.c_cpp_flags.desc":"one argument per line","hyseimPackageJsonEditor.link_flags.title":"Arguments for ld","hyseimPackageJsonEditor.link_flags.desc":"one argument per line","hyseimPackageJsonEditor.ld_file.title":"LD file path","hyseimPackageJsonEditor.ld_file.desc":"Use another LD file","hyseimPackageJsonEditor.entry.title":"Entry file","hyseimPackageJsonEditor.entry.desc":"Commonly used in a demo project.","hyseimPackageJsonEditor.definitions.title":"C/C++ Definitions","hyseimPackageJsonEditor.definitions.desc":"User configurable definitions, will create #define in compile time.","hyseimPackageJsonEditor.include.title":"Include root","hyseimPackageJsonEditor.include.desc":"User can #include your header from these folders. But recommended use only one folder, and no other source inside it.","hyseimPackageJsonEditor.prebuilt.title":"Prebuilt library file","hyseimPackageJsonEditor.prebuilt.desc":"If your library is not open source, assign the pre compiled .a file here.","hyseimPackageJsonEditor.exampleSource.title":"Examples","hyseimPackageJsonEditor.exampleSource.desc":"You can add example in your library (example is a folder contains {0}, and it's project type is executable).","hyseimPackageJsonEditor.properties.title":"CMake properties","hyseimPackageJsonEditor.properties.desc":"Please check CMake manual to get more information","hyseimPackageJsonEditor.extraList.title":"Prepend raw cmake lists","hyseimPackageJsonEditor.extraList.desc":"This file's content will add into generated cmakelist, note that you cannot use compile target, because it did not created.","hyseimPackageJsonEditor.extraList.placeholder":"Do not use this in most project.","hyseimPackageJsonEditor.dependency.title":"Project dependencies","hyseimPackageJsonEditor.dependency.desc":"One package per line"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/hyseimPackageJsonEditorInput":{"hyseimPackageJson.editor.description.long":"Configure CMake settings for {1} project","hyseimPackageJson.editor.description.long_for":"Configure CMake settings for this project","hyseimPackageJson.editor.description.medium_for":"Project {0} settings","hyseimPackageJson.editor.description.medium":"Current project settings"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/openPackageJsonEditorAction":{"workspace.required":"You must open source folder to do that."},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/common/ids":{"hyseimPackageJsonEditor":"Configure"},"vs/hyseim/vs/base/common/menu/openocd":{"openocd":"OpenOCD","jtag":"JLink","openocd.action.start":"Start openocd server","openocd.action.stop":"Stop openocd server","openocd.action.restart":"Restart openocd server","jtag.action.detect":"Detect connected JTag ids","jtag.action.install.libusb":"Install LibUSB driver","jtag.action.install":"Restore jlink driver"},"vs/hyseim/vs/services/openocd/electron-browser/actions/jtagBase":{"leanHow":"Learn how to install JLink driver.","detail":"Show Detail","never again":"Don't Show Again"},"vs/hyseim/vs/services/openocd/electron-browser/actions/jtagFindId":{"detail":"Show Detail"},"vs/hyseim/vs/workbench/actionRegistry/common/openDevToolsAction":{"openDevTools":"Open Developer Tools"},"vs/hyseim/vs/base/common/menu/webLink":{"weblink":"External Link","openocd.action.weblink.forum":"Open Forum","openocd.action.weblink.document":"Visit Online Document"},"vs/hyseim/vs/platform/fileDialog/common/configKeys":{"file-dialog.types.source":"Source file extensions","file-dialog.types.source.desc":"Filter file name when finding source file from directory, separate by \";\"."},"vs/hyseim/vs/platform/menubar/electron-main/aboutMenuDialog":{"myAboutDetail":"VS Code: {0}\nHyseim IDE: {1}\nCommit: {2}\nElectron: {4}\nChrome: {5}\nNode.js: {6}\nV8: {7}\nArchitecture: {8}","okButton":"OK","copy":"&&Copy"},"vs/hyseim/vs/workbench/fpioaConfig/electron-browser/editor/leftPanel":{"settingsListLabel":"Settings"},"vs/hyseim/vs/workbench/flashManager/common/editorModel":{"fileNotFound":"File not exists: \"{0}\""},"vs/hyseim/vs/workbench/flashManager/browser/list":{"invalidName":"Invalid name, must match: {0}","invalidAddress":"Invalid address, must match: {0}","invalidAddressAlign":"Flash address must be divisible by {0}","noteAddressProgram":"Note: remember to verify your program binary size","filenameEmpty":"File is required","nameLabel":"Section name: ","namePlaceholder":"Reference name","swapLabel":"Swap bytes","addressLabel":"Flash address: ","addressPlaceholder":"Flash address","auto":"Auto determine","addressEndLabel":"End: ","fileLabel":"File path:","open":"Open file...","selectTitle":"Select file to flash","errorOutside":"Must select files inside project root."},"vs/hyseim/vs/platform/serialPort/flasher/node/flasher":{"serial.memory.writing":"Writing Memory @ {0}","serial.flash.writing":"Writing Flash @ {0}"},"vs/hyseim/vs/workbench/serialMonitor/common/schema":{"hexLineFeed.title":"Hex Mode Use LF","hexLineFeed.desc":"(When charset=hex) Do not dump \\n character","dataBits.title":"Data Bits","dataBits.desc":"Serial port data bits","stopBits.title":"Stop Bits","stopBits.desc":"Serial port stop bits","parity.title":"Parity","parity.desc":"Serial port parity","outputCharset.title":"Output Charset","outputCharset.desc":"Transform device output before print out","charset.binary":"binary: Device output is ANSI","charset.utf8":"utf8: Device output is UTF-8","charset.hex":"hex: Device output is binary, print as HEX","charset.hexasc":"hexasc: Device output is HEX string, transform to ANSI","inputCharset.title":"Input Charset","inputCharset.desc":"Transform your input before send to device","lineEnding.title":"Input Line Ending","lineEnding.desc":"(Raw mode only) Append character after your input","escape.title":"Escape","escape.desc":"(Raw mode only) Enable input escape, eg: \"\\n\" will transform to 0x0A","echo.title":"Echo","echo.desc":"Echo back what you type","translateLineFeed.title":"Translate Output LF","translateLineFeed.desc":"When receive these character(s), print a new line"},"vs/hyseim/vs/base/common/menu/processTool":{"developerTools":"IDE Debug Tools","openocd.action.report":"Generate Help Data","openocd.action.relaunch":"Restart IDE","reloadWindow":"Reload Window","openocd.action.quit-and-update":"Quit and open updater"},"vs/hyseim/vs/platform/open/common/actionIds":{"hyseim.open":"Open","workbench.action.hyseim.open.terminal":"Open System Terminal"},"vs/hyseim/vs/workbench/cmake/common/launchConfig":{"workspace":"workspace"},"vs/hyseim/vs/services/makefileService/node/resolve":{"loopDetected":"Loop detected in: {0}"},"vs/hyseim/vs/workbench/packageManager/browser/viewletPanels/localPackagesListView":{"detail":"Detail","packages":"Packages"},"vs/hyseim/vs/workbench/packageManager/browser/viewletPanels/packageConfigView":{"leave.empty.to.use.default":"Leave empty to use the default value","dependency tree":"Dependency Tree"},"vs/hyseim/vs/workbench/packageManager/browser/editors/remotePackagesListView":{"detail":"Detail","installing":"Installing...","download":"Download","selectVersion":"Select Version"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/sectionFactory":{"library":"Library","prebuilt library":"Prebuilt library","executable":"Executable"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/fields/sourceFileList":{"addFile":"Add files...","addFileTreeDesc":"Add all files from specified folder, recursively...","addFileAll":"Add folders...","addFileTree":"Add tree..."},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/fields/singleFile":{"addFileSingle":"Select file..."},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/fields/folderList":{"addFolder":"Add folders..."},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/fields/singleFolder":{"addFolderSingle":"Select folder..."},"vs/hyseim/vs/base/electron-browser/rawClipboardAction":{"copy":"Copy"},"vs/hyseim/vs/workbench/fpioaConfig/electron-browser/editor/left/chipSelectView":{"alert":"Alert","chip.select.overwrite.alert":"Your pin config will lost. Are you sure?"},"vs/hyseim/vs/workbench/fpioaConfig/electron-browser/editor/contextMenu":{"HyseimIOEditorSetPinFunc":"assign function to selected io pin","HyseimIOEditorSetPinFuncShort":"Assign Function","HyseimIOEditorUnsetPinFunc":"No Function"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/node/validators":{"error.empty":"This is required","error.project-name.invalid":"Invalid project name","error.version.invalid":"Invalid version string, must be: x.y.z[-aaa]","error.url.invalid":"Invalid homepage url, must start with http(s)://","error.folder.invalid":"Not a folder: {0}","error.folder.nf":"Not found folder: {0}","error.file.invalid":"Not a file: {0}","error.file.nf":"Not found file: {0}","error.arg.list":"Invalid line: {0}. Must match: {1}"},"vs/hyseim/vs/workbench/hyseimPackageJsonEditor/electron-browser/fields/base":{"select":"select ","add":"Add"},"vs/hyseim/vs/platform/fileDialog/common/sourceFile":{"sourceFilesType":"Source files"}, "vs/platform/menubar/electron-main/menubar":{"mBuild":"&&Build","mProject":"&&Project"},"vs/workbench/browser/parts/titlebar/menubarControl":{"mBuild":"&&Build","mProject":"&&Project"},"vs/workbench/contrib/extensions/browser/extensions.contribution":{"extensions":"Extensions"},"vs/workbench/electron-browser/desktop.contribution":{"miSaveWorkspaceAs":"Save Workspace As..."}}}
